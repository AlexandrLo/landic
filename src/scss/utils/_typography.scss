$util-typography: (
  "fs": (
    props: font-size,
    prefix: fs,
    rfs: true,
    values: $font-sizes,
  ),
  "text-align": (
    props: text-align,
    prefix: text,
    responsive: true,
    values: (
      "center": center,
      "start": start,
      "end": end,
    ),
  ),
  "text-transform": (
    props: text-transform,
    prefix: text,
    values: (
      "capitalize": capitalize,
      "uppercase": uppercase,
      "lowercase": lowercase,
    ),
  ),
  "text-weight": (
    props: font-weight,
    prefix: text,
    values: (
      "heavy": 900,
      "extra-bold": 800,
      "bold": 700,
      "semi-bold": 600,
      "medium": 500,
      "regular": 400,
      "light": 300,
      "extra-light": 200,
      "thin": 100,
    ),
  ),
  "font-style": (
    props: font-style,
    prefix: text,
    values: (
      "italic": italic,
      "normal": normal,
    ),
  ),
  "text-decoration": (
    props: text-decoration,
    prefix: text,
    values: (
      "underline": underline,
      "line-through": line-through,
    ),
  ),
  "text-mark": (
    props: padding background-color,
    prefix: text,
    values: (
      "mark": 0.2em map-get($color-brand, "400"),
    ),
  ),
  "heading": (
    props: font-weight font-size line-height,
    prefix: heading,
    important: false,
    rfs: true,
    values: (
      "1": 900 map-get($font-sizes, "1000") 1.2,
      "2": 900 map-get($font-sizes, "900") 1.2,
      "3": 800 map-get($font-sizes, "800") 1.3,
      "4": 800 map-get($font-sizes, "700") 1.3,
      "5": 800 map-get($font-sizes, "600") 1.4,
      "6": 800 map-get($font-sizes, "500") 1.5,
    ),
  ),
  "subtitle": (
    props: font-weight font-size line-height,
    prefix: subtitle,
    important: false,
    rfs: true,
    values: (
      "1": 700 map-get($font-sizes, "500") 1.5,
      "2": 500 map-get($font-sizes, "500") 1.5,
    ),
  ),
  "lead": (
    props: font-weight font-size line-height,
    prefix: lead,
    important: false,
    rfs: true,
    values: (
      "1": 400 map-get($font-sizes, "500") 1.5,
      "2": 500 map-get($font-sizes, "400") 1.5,
    ),
  ),
  "body": (
    props: font-weight font-size line-height,
    prefix: body,
    important: false,
    rfs: true,
    values: (
      "1": 400 map-get($font-sizes, "400") 1.5,
      "2": 400 map-get($font-sizes, "300") 1.5,
    ),
  ),
  "label": (
    props: font-weight font-size line-height,
    prefix: label,
    important: false,
    rfs: true,
    values: (
      "lg": 600 map-get($font-sizes, "500") 1.5,
      "md": 600 map-get($font-sizes, "400") 1.5,
      "sm": 600 map-get($font-sizes, "200") 1.5,
    ),
  ),
);
@include util-gen($util-typography);

@mixin typography($type, $variant) {
  $type-def: map-get($util-typography, $type);
  $props: map-get($type-def, props);
  $important: map-get($type-def, important);
  $rfs: map-get($type-def, rfs);
  $values: map-get(map-get($type-def, values), $variant);
  $prop-map: lists2map($props, $values);
  @each $prop, $value in $prop-map {
    @if $prop == font-size and $rfs {
      @include font-size($value if($important, !important, null));
    } @else {
      #{$prop}: $value if($important, !important, null);
    }
  }
}

body,
p {
  font-style: normal;
  font-weight: 400;
  font-size: map-get($font-sizes, "400");
  line-height: 1.5;
}

::selection {
  background-color: transparentize(map-get($color-brand, "400"), 0.5);
}

b,
strong {
  @extend .text-bold;
}

i,
em {
  @extend .text-italic;
}

small {
  @extend .fs-300;
}

ins,
u {
  @extend .text-underline;
}

del,
s {
  @extend .text-line-through;
}

mark {
  @extend .text-mark;
}

q {
  @extend .lead-1;
  &::after {
    content: "";
  }
  &::before {
    content: "";
  }
}

@for $i from 1 through 6 {
  h#{$i} {
    @extend .heading-#{$i};
  }
}
