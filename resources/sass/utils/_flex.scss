.d-flex {
  display: flex !important;
}
.flex-fill {
  flex: 1 1 auto !important;
}

@mixin flex-generator($class-prefix, $prop-name, $props) {
  @each $prop, $value in $props {
    .#{$class-prefix}-#{$prop} {
      #{$prop-name}: $value !important;
    }
  }
}

$align-items-props: (
  "center": center,
  "start": flex-start,
  "end": flex-end,
  "stretch": stretch,
  "baseline": baseline,
);
$justify-content-props: (
  "center": center,
  "start": start,
  "end": end,
  "around": space-around,
  "between": space-between,
  "evenly": space-evenly,
);
$flex-direction-props: (
  "column": column,
  "column-reverse": column-reverse,
  "row": row,
  "row-reverse": row-reverse,
);
$flex-grow-shrink-props: (
  "0": 0,
  "1": 1,
  "2": 2,
  "3": 3,
  "4": 4,
  "5": 5,
);

@include flex-generator("align-items", "align-items", $align-items-props);
@include flex-generator("align-self", "align-self", $align-items-props);
@include flex-generator(
  "justify-content",
  "justify-content",
  $justify-content-props
);
@include flex-generator("flex", "flex-direction", $flex-direction-props);
@include flex-generator("flex-grow", "flex-grow", $flex-grow-shrink-props);
@include flex-generator("flex-shrink", "flex-shrink", $flex-grow-shrink-props);
@include flex-generator("flex-basis", "flex-basis", $flex-grow-shrink-props);
